"use strict";(self.webpackChunkportal_interactivo=self.webpackChunkportal_interactivo||[]).push([[6691],{26775:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>t});var i=n(74848),r=n(28453);const o={sidebar_position:13},s="Sugerencias sobre Optimizaci\xf3n de Rendimiento",l={id:"DevelopmentResources/Framework/Sugerencias en optimizacion del performance",title:"Sugerencias sobre Optimizaci\xf3n de Rendimiento",description:"Principio de Funcionamiento",source:"@site/docs/DevelopmentResources/Framework/Sugerencias en optimizacion del performance.md",sourceDirName:"DevelopmentResources/Framework",slug:"/DevelopmentResources/Framework/Sugerencias en optimizacion del performance",permalink:"/portal-interactivo/docs/DevelopmentResources/Framework/Sugerencias en optimizacion del performance",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"docsSidebar",previous:{title:"Compatibilidad",permalink:"/portal-interactivo/docs/DevelopmentResources/Framework/Compatibilidad"},next:{title:"Componente",permalink:"/portal-interactivo/docs/category/componente"}},d={},t=[{value:"Principio de Funcionamiento",id:"principio-de-funcionamiento",level:2},{value:"Optimizando la Primera Pantalla",id:"optimizando-la-primera-pantalla",level:2},{value:"Controlando el Tama\xf1o del Paquete de Recursos del Mini Program",id:"controlando-el-tama\xf1o-del-paquete-de-recursos-del-mini-program",level:3},{value:"Anticipar la Solicitud de Datos a onLoad",id:"anticipar-la-solicitud-de-datos-a-onload",level:3},{value:"Controlar el N\xfamero de Nodos a Renderizar a la Vez en la Primera Pantalla",id:"controlar-el-n\xfamero-de-nodos-a-renderizar-a-la-vez-en-la-primera-pantalla",level:3},{value:"Optimizar la L\xf3gica de setData",id:"optimizar-la-l\xf3gica-de-setdata",level:2},{value:"Caso de optimizaci\xf3n",id:"caso-de-optimizaci\xf3n",level:2},{value:"Usar el par\xe1metro clave",id:"usar-el-par\xe1metro-clave",level:2}];function c(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"sugerencias-sobre-optimizaci\xf3n-de-rendimiento",children:"Sugerencias sobre Optimizaci\xf3n de Rendimiento"}),"\n",(0,i.jsx)(a.h2,{id:"principio-de-funcionamiento",children:"Principio de Funcionamiento"}),"\n",(0,i.jsx)(a.p,{children:"Diferente de las aplicaciones H5 tradicionales, la arquitectura de operaci\xf3n del Mini Programa se divide en dos partes: webview y worker. El webview es para renderizar, y el worker es para el almacenamiento de datos y la ejecuci\xf3n l\xf3gica del servicio."}),"\n",(0,i.jsxs)(a.ol,{children:["\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"La comunicaci\xf3n entre el webview y el worker es as\xedncrona. Esto significa que los datos no se renderizan inmediatamente cuando se llama a setData, y la transmisi\xf3n as\xedncrona del worker al webview ocurre."}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Durante la transmisi\xf3n, los datos se serializan como una cadena y se transfieren mediante evaluateJavascript. El tama\xf1o de los datos afecta el rendimiento."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(a.h2,{id:"optimizando-la-primera-pantalla",children:"Optimizando la Primera Pantalla"}),"\n",(0,i.jsx)(a.p,{children:"La primera pantalla puede ser definida de manera diferente. Aqu\xed significa la primera renderizaci\xf3n significativa del servicio. Por ejemplo: en relaci\xf3n a una p\xe1gina de lista, la primera pantalla significa los contenidos renderizados por primera vez en la lista."}),"\n",(0,i.jsx)(a.h3,{id:"controlando-el-tama\xf1o-del-paquete-de-recursos-del-mini-program",children:"Controlando el Tama\xf1o del Paquete de Recursos del Mini Program"}),"\n",(0,i.jsx)(a.p,{children:"Cuando el usuario accede al Mini Programa por primera vez, el cliente de la aplicaci\xf3n m\xf3vil descarga el paquete de recursos del Mini Programa desde el CDN, por lo que el tama\xf1o del paquete de recursos afecta el rendimiento de inicio del Mini Programa."}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.strong,{children:"Sugerencias de optimizaci\xf3n:"})}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"Eliminar los recursos de imagen in\xfatiles, ya que todos los recursos de imagen se empaquetan de forma predeterminada."}),"\n",(0,i.jsx)(a.li,{children:"Controlar el tama\xf1o de las im\xe1genes y evitar el uso de im\xe1genes grandes. Se recomienda cargar im\xe1genes grandes a trav\xe9s de canales CDN."}),"\n",(0,i.jsx)(a.li,{children:"Limpiar c\xf3digos in\xfatiles a tiempo."}),"\n"]}),"\n",(0,i.jsx)(a.h3,{id:"anticipar-la-solicitud-de-datos-a-onload",children:"Anticipar la Solicitud de Datos a onLoad"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Al operar, el Mini Programa desencadena la funci\xf3n del ciclo de vida onLoad de la p\xe1gina, y luego transfiere los datos de la p\xe1gina inicial del worker al webview para la renderizaci\xf3n inicial."}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"Cuando se completa la renderizaci\xf3n inicial de la p\xe1gina, se env\xeda una notificaci\xf3n del webview al worker y se desencadena la funci\xf3n del ciclo de vida onReady. Algunos Mini Programas env\xedan solicitudes en onReady lo que causa un retraso en la renderizaci\xf3n de la primera pantalla."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.strong,{children:"Sugerencia de optimizaci\xf3n:"})}),"\n",(0,i.jsx)(a.p,{children:"Anticipar la solicitud de datos a onLoad."}),"\n",(0,i.jsx)(a.h3,{id:"controlar-el-n\xfamero-de-nodos-a-renderizar-a-la-vez-en-la-primera-pantalla",children:"Controlar el N\xfamero de Nodos a Renderizar a la Vez en la Primera Pantalla"}),"\n",(0,i.jsx)(a.p,{children:"Despu\xe9s de que se devuelve la solicitud de servicio, generalmente se llama a setData para desencadenar la renderizaci\xf3n de la p\xe1gina. El proceso de ejecuci\xf3n es el siguiente:"}),"\n",(0,i.jsxs)(a.ol,{children:["\n",(0,i.jsx)(a.li,{children:"Los datos se env\xedan del worker al webview."}),"\n",(0,i.jsx)(a.li,{children:"El webview construye un DOM virtual seg\xfan los datos transferidos, hace una comparaci\xf3n de diferencias con los datos anteriores (comenzando desde el nodo ra\xedz) y comienza la renderizaci\xf3n."}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:"Debido a la serializaci\xf3n de datos en la comunicaci\xf3n del worker al webview, y luego la ejecuci\xf3n de evaluateJavascript en el webview, el rendimiento de renderizaci\xf3n de la primera pantalla se ve afectado si los datos transmitidos una vez son demasiado grandes."}),"\n",(0,i.jsx)(a.p,{children:"Adem\xe1s, si los nodos de construcci\xf3n son demasiado numerosos o la jerarqu\xeda anidada es demasiado profunda en el webview, digamos, m\xe1s de 100 elementos de lista para ser renderizados de una vez en la p\xe1gina de lista de algunos Mini Programas y cada elemento de lista contiene contenidos anidados, pero menos de 10 elementos para ser mostrados en toda la pantalla, la comparaci\xf3n diferente lleva mucho tiempo, se construyen un gran n\xfamero de DOM de una vez en la primera pantalla y se compromete el rendimiento de renderizaci\xf3n de la primera pantalla."}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.strong,{children:"Sugerencias de optimizaci\xf3n:"})}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"La cantidad de datos de setData no debe ser demasiado grande; no transferir una lista demasiado larga de una vez."}),"\n"]}),"\n",(0,i.jsxs)(a.li,{children:["\n",(0,i.jsx)(a.p,{children:"No construir demasiados nodos en la primera pantalla. El extremo del servicio puede solicitar una gran cantidad de datos de una vez. No ejecutar setData de una vez. Es posible ejecutar setData con datos parciales y esperar un tiempo (digamos, 400 ms, dependiendo del servicio espec\xedfico) y luego llamar a $spliceData para transferir los datos restantes."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(a.h2,{id:"optimizar-la-l\xf3gica-de-setdata",children:"Optimizar la L\xf3gica de setData"}),"\n",(0,i.jsx)(a.p,{children:"Cualquier cambio de p\xe1gina desencadena setData. Al mismo tiempo, m\xfaltiples setData pueden desencadenar la renderizaci\xf3n de la p\xe1gina. Las siguientes cuatro interfaces desencadenan la renderizaci\xf3n de la p\xe1gina webview."}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.strong,{children:"Page.prototype.setData:"})," Desencadena la comparaci\xf3n de diferencias de toda la p\xe1gina."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.strong,{children:"Page.prototype.$spliceData:"})," Optimiza la lista larga y evita transferir toda la lista de una vez y desencadenar la comparaci\xf3n de diferencias de toda la p\xe1gina."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.strong,{children:"Component.prototype.setData:"})," Inicia la comparaci\xf3n de diferencias desde el nodo de componente correspondiente."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.strong,{children:"Component.prototype.$spliceData:"})," Optimiza la lista larga y evita transferir toda la lista de una vez. Solo realiza la comparaci\xf3n de diferencias desde el nodo de componente correspondiente."]}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.strong,{children:"Sugerencias de optimizaci\xf3n:"})}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"Evitar desencadenar setData o $spliceData con frecuencia, ya sea a nivel de p\xe1gina o de componente. En los casos analizados, algunas p\xe1ginas contienen l\xf3gica de cuenta regresiva pero la cuenta regresiva se activa con demasiada frecuencia (en microsegundos)."}),"\n",(0,i.jsx)(a.li,{children:"Cuando sea necesario desencadenar la renderizaci\xf3n con frecuencia, evitar usar setData o $spliceData a nivel de p\xe1gina. Este bloque puede encapsularse en un componente personalizado, y luego se pueden usar setData y $spliceData a nivel de componente para desencadenar la renderizaci\xf3n del componente."}),"\n",(0,i.jsx)(a.li,{children:"Para la renderizaci\xf3n de una lista de datos largos, usar $spliceData para agregar datos varias veces en lugar de transferir toda la lista."}),"\n",(0,i.jsx)(a.li,{children:"Para p\xe1ginas complicadas, se recomienda encapsularlas en un componente personalizado para minimizar el setData a nivel de p\xe1gina."}),"\n"]}),"\n",(0,i.jsx)(a.h2,{id:"caso-de-optimizaci\xf3n",children:"Caso de optimizaci\xf3n"}),"\n",(0,i.jsx)(a.p,{children:"Se sugiere especificar la ruta para establecer los datos:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-js",children:"this.setData({\r\n  'array[0]': 1,\r\n  'obj.x': 2,\r\n});\n"})}),"\n",(0,i.jsx)(a.p,{children:"No se sugiere el siguiente m\xe9todo (aunque se copie this.data, el atributo se cambia directamente):"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-js",children:"const array = this.data.array.concat();\r\narray[0] = 1;\r\nconst obj = { ...this.data.obj };\r\nobj.x = 2;\r\nthis.setData({ array, obj });\n"})}),"\n",(0,i.jsx)(a.p,{children:"Incluso no se sugiere el cambio directo de this.data (violando el principio de datos inmutables):"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-js",children:"this.data.array[0] = 1;\r\nthis.data.obj.x = 2;\r\nthis.setData(this.data);\n"})}),"\n",(0,i.jsx)(a.p,{children:"Usar $spliceData para listas largas"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-js",children:"this.$spliceData({ 'a.b': [1, 0, 5, 6] })\n"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.strong,{children:"Nota:"})}),"\n",(0,i.jsxs)(a.p,{children:["A veces, cuando la l\xf3gica del servicio est\xe1 encapsulada en un componente, solo es necesario llamar a ",(0,i.jsx)(a.code,{children:"setData"})," dentro del componente cuando la interfaz de usuario del componente necesita volver a renderizarse. Sin embargo, en otras ocasiones, es necesario activar el nuevo renderizado del componente desde la p\xe1gina. Por ejemplo, se monitoriza el evento ",(0,i.jsx)(a.code,{children:"onPageScroll"})," en la p\xe1gina y es necesario notificar al componente correspondiente que vuelva a renderizarse cuando se active el evento. Ahora la medida es la siguiente:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-js",children:"// /pages/index/index.js\r\nPage({\r\n    onPageScroll(e) {\r\n        if (this.xxcomponent) {\r\n            this.xxcomponent.setData({\r\n                scrollTop: e.scrollTop\r\n            })\r\n        }\r\n    }\r\n})\r\n// /components/index/index.js\r\nComponent({\r\n    didMount(){\r\n        this.$page.xxcomponent = this;\r\n    }\r\n})\n"})}),"\n",(0,i.jsx)(a.p,{children:"Es posible montar el componente en la p\xe1gina correspondiente en el didMount, de modo que la llamada de setData a nivel de componente en la p\xe1gina desencadene el nuevo renderizado del componente solamente."}),"\n",(0,i.jsx)(a.h2,{id:"usar-el-par\xe1metro-clave",children:"Usar el par\xe1metro clave"}),"\n",(0,i.jsx)(a.p,{children:'La "clave" se puede usar en "for" para aumentar el rendimiento. Tenga en cuenta que la "clave" no se puede establecer en bloques.'}),"\n",(0,i.jsx)(a.p,{children:"C\xf3digos de ejemplo:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-xml",children:'<view a:for="{{array}}" key="{{item.id}}"></view>\r\n<block a:for="{{array}}"><view key="{{item.id}}"></view></block>\n'})})]})}function p(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>l});var i=n(96540);const r={},o=i.createContext(r);function s(e){const a=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:a},e.children)}}}]);